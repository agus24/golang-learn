//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Orders = newOrdersTable("", "orders", "")

type ordersTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	Date         mysql.ColumnTimestamp
	OrderNumber  mysql.ColumnString
	GrandTotal   mysql.ColumnFloat
	CustomerName mysql.ColumnString
	CreatedAt    mysql.ColumnTimestamp
	UpdatedAt    mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type OrdersTable struct {
	ordersTable

	NEW ordersTable
}

// AS creates new OrdersTable with assigned alias
func (a OrdersTable) AS(alias string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new OrdersTable with assigned schema name
func (a OrdersTable) FromSchema(schemaName string) *OrdersTable {
	return newOrdersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new OrdersTable with assigned table prefix
func (a OrdersTable) WithPrefix(prefix string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new OrdersTable with assigned table suffix
func (a OrdersTable) WithSuffix(suffix string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newOrdersTable(schemaName, tableName, alias string) *OrdersTable {
	return &OrdersTable{
		ordersTable: newOrdersTableImpl(schemaName, tableName, alias),
		NEW:         newOrdersTableImpl("", "new", ""),
	}
}

func newOrdersTableImpl(schemaName, tableName, alias string) ordersTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		DateColumn         = mysql.TimestampColumn("date")
		OrderNumberColumn  = mysql.StringColumn("order_number")
		GrandTotalColumn   = mysql.FloatColumn("grand_total")
		CustomerNameColumn = mysql.StringColumn("customer_name")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		UpdatedAtColumn    = mysql.TimestampColumn("updated_at")
		allColumns         = mysql.ColumnList{IDColumn, DateColumn, OrderNumberColumn, GrandTotalColumn, CustomerNameColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns     = mysql.ColumnList{DateColumn, OrderNumberColumn, GrandTotalColumn, CustomerNameColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns     = mysql.ColumnList{DateColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return ordersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Date:         DateColumn,
		OrderNumber:  OrderNumberColumn,
		GrandTotal:   GrandTotalColumn,
		CustomerName: CustomerNameColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
