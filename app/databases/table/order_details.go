//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var OrderDetails = newOrderDetailsTable("", "order_details", "")

type orderDetailsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	OrderID   mysql.ColumnInteger
	ItemID    mysql.ColumnInteger
	Quantity  mysql.ColumnInteger
	Price     mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type OrderDetailsTable struct {
	orderDetailsTable

	NEW orderDetailsTable
}

// AS creates new OrderDetailsTable with assigned alias
func (a OrderDetailsTable) AS(alias string) *OrderDetailsTable {
	return newOrderDetailsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new OrderDetailsTable with assigned schema name
func (a OrderDetailsTable) FromSchema(schemaName string) *OrderDetailsTable {
	return newOrderDetailsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new OrderDetailsTable with assigned table prefix
func (a OrderDetailsTable) WithPrefix(prefix string) *OrderDetailsTable {
	return newOrderDetailsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new OrderDetailsTable with assigned table suffix
func (a OrderDetailsTable) WithSuffix(suffix string) *OrderDetailsTable {
	return newOrderDetailsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newOrderDetailsTable(schemaName, tableName, alias string) *OrderDetailsTable {
	return &OrderDetailsTable{
		orderDetailsTable: newOrderDetailsTableImpl(schemaName, tableName, alias),
		NEW:               newOrderDetailsTableImpl("", "new", ""),
	}
}

func newOrderDetailsTableImpl(schemaName, tableName, alias string) orderDetailsTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		OrderIDColumn   = mysql.IntegerColumn("order_id")
		ItemIDColumn    = mysql.IntegerColumn("item_id")
		QuantityColumn  = mysql.IntegerColumn("quantity")
		PriceColumn     = mysql.IntegerColumn("price")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		allColumns      = mysql.ColumnList{IDColumn, OrderIDColumn, ItemIDColumn, QuantityColumn, PriceColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns  = mysql.ColumnList{OrderIDColumn, ItemIDColumn, QuantityColumn, PriceColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn}
	)

	return orderDetailsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		OrderID:   OrderIDColumn,
		ItemID:    ItemIDColumn,
		Quantity:  QuantityColumn,
		Price:     PriceColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
