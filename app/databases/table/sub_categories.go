//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SubCategories = newSubCategoriesTable("", "sub_categories", "")

type subCategoriesTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	Name       mysql.ColumnString
	CategoryID mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	UpdatedAt  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SubCategoriesTable struct {
	subCategoriesTable

	NEW subCategoriesTable
}

// AS creates new SubCategoriesTable with assigned alias
func (a SubCategoriesTable) AS(alias string) *SubCategoriesTable {
	return newSubCategoriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubCategoriesTable with assigned schema name
func (a SubCategoriesTable) FromSchema(schemaName string) *SubCategoriesTable {
	return newSubCategoriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubCategoriesTable with assigned table prefix
func (a SubCategoriesTable) WithPrefix(prefix string) *SubCategoriesTable {
	return newSubCategoriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubCategoriesTable with assigned table suffix
func (a SubCategoriesTable) WithSuffix(suffix string) *SubCategoriesTable {
	return newSubCategoriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubCategoriesTable(schemaName, tableName, alias string) *SubCategoriesTable {
	return &SubCategoriesTable{
		subCategoriesTable: newSubCategoriesTableImpl(schemaName, tableName, alias),
		NEW:                newSubCategoriesTableImpl("", "new", ""),
	}
}

func newSubCategoriesTableImpl(schemaName, tableName, alias string) subCategoriesTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		NameColumn       = mysql.StringColumn("name")
		CategoryIDColumn = mysql.IntegerColumn("category_id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		allColumns       = mysql.ColumnList{IDColumn, NameColumn, CategoryIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns   = mysql.ColumnList{NameColumn, CategoryIDColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns   = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn}
	)

	return subCategoriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Name:       NameColumn,
		CategoryID: CategoryIDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
