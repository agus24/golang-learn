//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Items = newItemsTable("", "items", "")

type itemsTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	Name          mysql.ColumnString
	Price         mysql.ColumnInteger
	SubCategoryID mysql.ColumnInteger
	CreatedAt     mysql.ColumnTimestamp
	UpdatedAt     mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type ItemsTable struct {
	itemsTable

	NEW itemsTable
}

// AS creates new ItemsTable with assigned alias
func (a ItemsTable) AS(alias string) *ItemsTable {
	return newItemsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItemsTable with assigned schema name
func (a ItemsTable) FromSchema(schemaName string) *ItemsTable {
	return newItemsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItemsTable with assigned table prefix
func (a ItemsTable) WithPrefix(prefix string) *ItemsTable {
	return newItemsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItemsTable with assigned table suffix
func (a ItemsTable) WithSuffix(suffix string) *ItemsTable {
	return newItemsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItemsTable(schemaName, tableName, alias string) *ItemsTable {
	return &ItemsTable{
		itemsTable: newItemsTableImpl(schemaName, tableName, alias),
		NEW:        newItemsTableImpl("", "new", ""),
	}
}

func newItemsTableImpl(schemaName, tableName, alias string) itemsTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		NameColumn          = mysql.StringColumn("name")
		PriceColumn         = mysql.IntegerColumn("price")
		SubCategoryIDColumn = mysql.IntegerColumn("sub_category_id")
		CreatedAtColumn     = mysql.TimestampColumn("created_at")
		UpdatedAtColumn     = mysql.TimestampColumn("updated_at")
		allColumns          = mysql.ColumnList{IDColumn, NameColumn, PriceColumn, SubCategoryIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns      = mysql.ColumnList{NameColumn, PriceColumn, SubCategoryIDColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns      = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn}
	)

	return itemsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		Name:          NameColumn,
		Price:         PriceColumn,
		SubCategoryID: SubCategoryIDColumn,
		CreatedAt:     CreatedAtColumn,
		UpdatedAt:     UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
